#Space invaders Design Analysis

CURRENT PROBLEM:

? SPAWN ENEMIES AT A CERTAIN INTERVAL THAT increases over time
        What are the problems in implementing this ?
            - How will I be able to spawn the enemies every second ?
            - Can i decrease the interval of one spawn to another over time ?
            - Is there any other way to implement this ?
            - 

FIRST THOUGHT: IS create an interval field to enemy and add 1/28 per tick
                if (if current value is modulo 1) spawn an enemy


;;;;;;;;;;;;
Constants:

    GAME SCREEN:
        WIDTH = 325
        HEIGHT = 700
        MTS = (WIDTH HEIGHT)

    SPACESHIP:
        IMAGE = COLOR, SIZE, ETC
        POS_Y = Bottom or Exactly at HEIGHT
        X_SPEED = 10
        
    BULLET:
        IMAGE = COLOR, SIZE
        SPEED = 20
        BULLET_CUTOFF = 0 - BULLET-HEIGHT

    ENEMY:
        IMAGE = COLOR, SIZE
        ENEMY_Y_SPEED = ENEMY_X_SPEED 
        ENEMY_CUTOFF = (HEIGHT)
        ENEMY_SPAWN_Y = 0 - ENEMY
        ENEMY_SPAWN_DIR = RIGHT(+1)
        ENEMY_SPAWN_INTERVAL = (N/A for now) 1.01
        

;;;;;;;;;;;;;
Changing:
        SPACESHIP:
            POS_X << initial pos is center of width
            Direction = -1 for left, +1 for right
        
        BULLET:
            X_SPAWN_POS = SPACESHIP_POS_X
            Y_POS = by tock reduce by speed

        ENEMY:
            Direction LEFT or RIGHT
            X position  (CURRENT_X + X_SPEED) * DIR
            Y position  (CURRENT + Y_SPEED)
                
;;;;;;;;;;;;;
Bigbang Options:

(on-key ...) << handles all keys regarding spaceship x_position and firing bullet
(on-tick ...) << deals with the ENEMY changing position and the bullet when fired
(to-draw) << render any changes that happens with the world state
(stop) << stop when an enemy passes the height


DATA DEFINITIONS:
    1. GameState is a compound data type that has Spaceship, list of bullets, list of enemies
    2. Spaceship has X_Position and direction
    3. Bullet is a compound with X_spawn_position = current_spaceship_pos_X, y_pos
    4. list of bullets is one of: empty, (cons bullet ListOfBullets)
    5. enemy is a compound data type wih dir, x position, y position
    6. listofenemy is one of : empty (cons enemy ListofEnemies)

FUNCTIONS:
(on-key handle key)
    Spaceship: 
        space_ship key handler            
                when arrow positions is pressed call a function that changes the current state spaceship x_position
                since spaceship starts at the middle 
                        add when presssed: remove when released   << release â€” indicates a key-release event 
                        when right add speed x until (WIDTH - SPACESHIP-WIDTH)
                        when left subtract speed to x  until (0 + SPACESHIP-WIDTH)
    Bullet:
        bullet key handler
                when space is pressed cons (make-bullet x = current spaceship postion, y = current spaceship position)

(on-tick advance_handler)
    Bullet:
        handle bullet
            1. traverse the list and in every item advance the bullet 
                a. advance bullet function (subtract current y position by speed)
                b. delete the the item if it hits the bullet cutoff

(to-render)
    Spaceship: 
        handle spaceship
            1. place-image the spaceship to the const y position then the current x position 

    Bullet:
        handle Bullet 
            1. traverse the list and add the render bullet
            2. render bullet to its current position


AAAAAAAAAAAAAAADDDDDDDDDDDDVVAAAAAAAAAANNNNNNNNNNNNNCCCCCCCCCCCCCCCCEEEEEEEEEEEEEee

FUNCTIONS for enemy: 
(on-tick advance_enemy)
            1. create a list 
            2. spawn every 1 * (interval) spawn(make-enemy (random x position) y at start ) at init dir << NOTE FIRST TRY IT ON 1 spawn per second
            3. at tick +add speed to x and y then  if greater than or less than width change the direction but still maintaining the 45 degree angle
            4. if enemy enters the cutoff end the game

(to-render)
    Enemy handler
            traverse the list and render every item

FUNCTION
create a function that deletes both the bullet and the enemy if bullet hits the enemy
    check at tick if a bullet and enemy is near each other
    delete both of them from the list

#How I would go by the project
Current >>>>        Step1 : Create an initial domain analysis << create a overview of what to add to the game  
                            a. Create the data definitions
                            b. Review the data structures to be used in the game
                            c. Review the flow of the code and how to code the game efficiently
                    Step2 : psuedo code as much as possible for the functions << FOCUS on funtional programming paradigms and use helpers for creatingFunctions
                                !!! Separate implementations if necessary !!!
                                1. make the spaceship go left to right and left to left
                                2. make the bullets fire when space is called from the position of the of the spaceship
                                3. Spawn the enemies ! make sure that the enemies spawns properly according to the time interval
                                4. Create a function that deletes both bullet and enemy if a piece of bullet lands to anything around the enemy
                    Step3 : Code the whole psuedo code starting with:
                                1. Spaceship
                                2. Bullets
                                3. Enemies
                                4. Function for removal of enemies and bullets
